{"version":3,"file":"static/js/281.4f1cb3f2.chunk.js","mappings":"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","sources":["components/pages/replay/Message.js","components/pages/replay/SendMessage.js","components/pages/replay/Chat.js","components/pages/replay/Replay.js"],"sourcesContent":["import React from \"react\";\nimport { auth } from \"../../../Firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nexport default function Message({ message }) {\n  const [user] = useAuthState(auth);\n  // should be:\n  // text: message,\n  // name: displayName,\n  // avatar: photoURL,\n  // createdAt: serverTimestamp(),\n  // uid,\n  return (\n    <div className={`chat-bubble ${message.sender === user.uid ? \"right\" : \"left\"}`}>\n      {/* <img\n        className=\"chat-bubble__left\"\n        src={message.avatar}\n        alt=\"user avatar\"\n      /> */}\n      <div className=\"chat-bubble__right\">\n        {/* <p className=\"user-name\">{message.sender}</p> */}\n        <p className=\"user-message\">{message.message}</p>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from \"react\";\r\nimport { auth,db } from \"../../../Firebase\";\r\nimport { addDoc, collection, serverTimestamp, doc, updateDoc, increment } from \"firebase/firestore\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nexport default function SendMessage({selectedChat, spanRef, userFCMTOken}) {\r\n  const { t } = useTranslation();\r\n    const [message, setMessage] = useState(\"\");\r\n    const [height, setHeight] = useState(\"45px\");\r\n  const [user] = useAuthState(auth);\r\n  \r\n  const sendMessage = async (event) => {\r\n    event.preventDefault();\r\n    if (message.trim() === \"\") {\r\n      alert(\"Enter valid message\");\r\n      return;\r\n    }\r\n    \r\n    // to increment message count for mobile app\r\n    const chatRef = doc(db, \"chatroom\", user.uid, \"chats\", selectedChat.selectedUser );\r\n\r\n    // Atomically increment the population of the city by 50.\r\n    await updateDoc(chatRef, {\r\n      app_message_count : increment(1)\r\n    });\r\n    console.log(userFCMTOken)\r\n    // to send notification with api to app token\r\n    fetch('https://us-central1-sasuga-d222e.cloudfunctions.net/sendNotification', {\r\n      \"method\": 'POST',\r\n      \"headers\": {\r\n        'Content-Type': 'application/json',\r\n        'Accept' : 'application/json',\r\n      },\r\n      \"body\": JSON.stringify({\r\n        \"message\": message,\r\n        \"registrationToken\": userFCMTOken,\r\n        \"title\": 'Admin',\r\n        \"image\":\"\",\r\n    \"mobile_number\":\"\",\r\n    \"email\":\"\"\r\n      }),\r\n    }).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      return response.json();\r\n    }).then((responseJson) => {\r\n      // setModalOpen(false);startCall(); console.log(\"Notification send \",responseJson)\r\n      console.log(responseJson)\r\n    })\r\n    .catch((error) => {console.error(error)});\r\n\r\n\r\n\r\n    const newMessageCollection = collection(db,`chatroom/${user.uid}/chats/${selectedChat.selectedUser}/messages`);\r\n    await addDoc(newMessageCollection, {\r\n      message: message,\r\n      createdAt: serverTimestamp(),\r\n      sender:user.uid,\r\n    });\r\n    setMessage(\"\");\r\n    spanRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (message.length === 0) {\r\n      setHeight(\"45px\")\r\n    }\r\n  }, [message]);\r\n\r\n  const onEnterPress = (e) => {\r\n    if (e.target.scrollHeight < 100) {\r\n      setHeight(e.target.scrollHeight);\r\n    }\r\n    if(e.keyCode === 13) {\r\n      if (e.shiftKey === false) {\r\n        e.preventDefault();\r\n        sendMessage(e)\r\n        setHeight(\"45px\")\r\n      }\r\n    }\r\n  }\r\n\r\n    return (\r\n    <form onSubmit={(event) => sendMessage(event)} className=\"send-message\">\r\n        <label htmlFor=\"messageInput\" hidden>\r\n        {t('EnterMessage.EnterMessage')}\r\n        </label>\r\n        <textarea\r\n          id=\"messageInput\"\r\n          name=\"messageInput\"\r\n          type=\"text\"\r\n          className=\"form-input__input send-message-text-area\"\r\n          placeholder=\"type message...\"\r\n          value={message}\r\n          style={{\r\n            width: \"530px\",\r\n            padding: \"10px\",\r\n            borderRadius: \"21px\",\r\n            height: height\r\n          }}\r\n          onKeyDown={onEnterPress}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n        />\r\n        {/* <button type=\"submit\">Send</button> */}\r\n    </form>\r\n    );\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Callicon } from \"../../../assets/icons\";\r\nimport image_audio_call_start from \"../../../assets/images/image_audio_call_start.png\";\r\nimport image_video_call from \"../../../assets/images/image_video_call.png\";\r\nimport {\r\n  query,\r\n  collection,\r\n  getDocs,\r\n  orderBy,\r\n  onSnapshot,\r\n  limit,\r\n} from \"firebase/firestore\";\r\nimport { db, auth } from \"../../../Firebase\";\r\nimport Message from \"./Message\";\r\nimport SendMessage from \"./SendMessage\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport Modal from \"react-modal\";\r\nimport VideoCalling from \"../../../VideoCalling.tsx\";\r\nimport { doc, setDoc, updateDoc, increment } from \"firebase/firestore\";\r\n\r\nconst appRoot = document.getElementById(\"root\"); // Replace 'root' with the actual root element id\r\n\r\nModal.setAppElement(appRoot);\r\nconst customStyles = {\r\n  overlay: {\r\n    zIndex: 1,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.3)\", // Transparent background\r\n  },\r\n  content: {\r\n    // padding: 0, // Remove padding\r\n    // margin: 0, // Center horizontally\r\n    maxWidth: \"100%\", // Optional: set a maximum width for the modal\r\n    width: \"100%\", // Optional: make the modal responsive\r\n    border: \"none\", // Remove border (if any)\r\n    background: \"transparent\", // Transparent background\r\n    display: \"flex\", // Use flexbox for vertical centering\r\n    alignItems: \"center\", // Center vertically\r\n    justifyContent: \"center\", // Center horizontally\r\n  },\r\n};\r\nconst Chat = ({\r\n  selectedChat,\r\n  userFCMTOken,\r\n  userTitle,\r\n  userEmailAudio,\r\n  userPhoneNumberAudio,\r\n  userImageAudio,\r\n}) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [callType, setCallType] = useState(\"Audio\");\r\n  const spanRef = useRef(null);\r\n  const [user] = useAuthState(auth);\r\n  const [videoCall, setVideoCall] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const q = query(\r\n        collection(\r\n          db,\r\n          \"chatroom/\" +\r\n            user.uid +\r\n            \"/chats/\" +\r\n            selectedChat.selectedUser +\r\n            \"/messages\"\r\n        )\r\n      );\r\n      const unsubscribe = onSnapshot(q, (QuerySnapshot) => {\r\n        const fetchedMessages = [];\r\n        QuerySnapshot.forEach((doc) => {\r\n          fetchedMessages.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        const sortedMessages = fetchedMessages.sort(\r\n          (a, b) => a.createdAt - b.createdAt\r\n        );\r\n\r\n        setMessages(sortedMessages);\r\n        if (spanRef.current) {\r\n          spanRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n      });\r\n      return () => unsubscribe;\r\n    }\r\n  }, [user, selectedChat]);\r\n  useEffect(() => {\r\n    if (spanRef.current) {\r\n      spanRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [messages]);\r\n\r\n  function scrollToBottom() {\r\n    if (spanRef.current) {\r\n      spanRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }\r\n\r\n  const onCallStartAudioVideo = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const closeModalOnOutsideClick = (event) => {\r\n    if (modalOpen && !event.target.closest(\".your-modal-class\")) {\r\n      setModalOpen(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (modalOpen) {\r\n      document.addEventListener(\"mousedown\", closeModalOnOutsideClick);\r\n    } else {\r\n      document.removeEventListener(\"mousedown\", closeModalOnOutsideClick);\r\n    }\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", closeModalOnOutsideClick);\r\n    };\r\n  }, [modalOpen]);\r\n\r\n  const callAudioVideoApi = async (type) => {\r\n    try {\r\n      await navigator.mediaDevices.getUserMedia({ video: true });\r\n      try {\r\n        await navigator.mediaDevices.getUserMedia({ audio: true });\r\n        const chatRef = doc(\r\n          db,\r\n          \"chatroom\",\r\n          user.uid,\r\n          \"chats\",\r\n          selectedChat.selectedUser\r\n        );\r\n        await updateDoc(chatRef, {\r\n          app_call_count: increment(1),\r\n        });\r\n        setCallType(type);\r\n        fetch(\r\n          \"https://us-central1-sasuga-d222e.cloudfunctions.net/sendNotification\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              message: type,\r\n              registrationToken: userFCMTOken,\r\n              title: \"Admin\",\r\n              image: \"\",\r\n              mobile_number: \"\",\r\n              email: \"\",\r\n            }),\r\n          }\r\n        )\r\n          .then((response) => {\r\n            console.log(\"responseresponse\", response);\r\n            if (!response.ok) {\r\n              throw new Error(`HTTP error! Status: ${response.status}`);\r\n            }\r\n            return response.json();\r\n          })\r\n          .then((responseJson) => {\r\n            setModalOpen(false);\r\n            startCall();\r\n            console.log(\"Notification send \", responseJson);\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n      } catch (error) {\r\n        alert(\"Please allow Microphone permission\");\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      alert(\"Please allow Camera permission\");\r\n      return;\r\n    }\r\n  };\r\n  const startCall = async () => {\r\n    const callRef = doc(db, \"call\", \"hO01sqCg552JEdhQMGae\");\r\n    await setDoc(callRef, { isCalling: true }, { merge: true }).then(\r\n      async (docSnap) => {\r\n        console.log(\"Call popup done start\");\r\n      }\r\n    );\r\n    setVideoCall(true);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"w-full pt-[10px] overflow-y-scroll\"\r\n      style={{ height: \"calc(100% - 62px)\" }}\r\n    >\r\n      <div\r\n        onClick={() => onCallStartAudioVideo()}\r\n        className=\"right\"\r\n        style={{\r\n          marginLeft: \"auto\",\r\n          cursor: \"pointer\",\r\n          position: \"absolute\",\r\n          right: \"35px\",\r\n          top: \"-43px\",\r\n          zIndex: 99,\r\n        }}\r\n      >\r\n        <Callicon />\r\n      </div>\r\n      <div\r\n        style={{ flexDirection: \"column\", height: \"100%\" }}\r\n        className=\"flex h-[89vh] video\"\r\n      >\r\n        {messages && (\r\n          <>\r\n            {messages?.map((message) => (\r\n              <Message key={message.id} message={message} />\r\n            ))}\r\n            <span ref={spanRef} onLoad={scrollToBottom()}></span>\r\n          </>\r\n        )}\r\n        <SendMessage\r\n          selectedChat={selectedChat}\r\n          userFCMTOken={userFCMTOken}\r\n          spanRef={spanRef}\r\n        />\r\n      </div>\r\n      <Modal\r\n        style={customStyles}\r\n        isOpen={modalOpen}\r\n        onRequestClose={() => setModalOpen(false)}\r\n      >\r\n        <div\r\n          className=\"your-modal-class\"\r\n          style={{\r\n            width: \"20%\",\r\n            borderRadius: 20,\r\n            padding: 15,\r\n            backgroundColor: \"#fff\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: 17 }}\r\n          >\r\n            Call Type\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              marginTop: 20,\r\n              justifyContent: \"space-around\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <img\r\n              src={image_audio_call_start}\r\n              onClick={() => callAudioVideoApi(\"Audio\")}\r\n              style={{ cursor: \"pointer\", height: 60, width: 60 }}\r\n            />\r\n            <img\r\n              src={image_video_call}\r\n              onClick={() => callAudioVideoApi(\"Video\")}\r\n              style={{ cursor: \"pointer\", height: 60, width: 60 }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n      {videoCall && (\r\n        <div className=\"flex  gap-3 pr-2 chat-cont\">\r\n          <div className=\"h-screen md:min-w-[280px] px-2 py-3\"></div>\r\n          <VideoCalling\r\n            title={userTitle}\r\n            videoCall={videoCall}\r\n            userImageAudio={userImageAudio}\r\n            userEmailAudio={userEmailAudio}\r\n            userPhoneNumberAudio={userPhoneNumberAudio}\r\n            setVideoCall={setVideoCall}\r\n            callType={callType}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Search } from \"../../../assets/icons\";\r\nimport Notification from \"../../../Notification\";\r\nimport VideoCalling from \"../../../VideoCalling.tsx\";\r\nimport Calllpopup from \"../../layout/callpopup\";\r\nimport Chat from \"./Chat\";\r\nimport { db, auth, messaging } from \"../../../Firebase\";\r\nimport { useState } from \"react\";\r\nimport { query, collection, onSnapshot, setDoc, doc } from \"firebase/firestore\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { onMessage } from \"firebase/messaging\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport phoneIcon from \"../../../assets/images/phone-icon.png\";\r\nimport messageIcon from \"../../../assets/images/message-icon.png\";\r\nimport userProfile from \"../../../assets/images/user-profile.png\";\r\nimport moment from \"moment\";\r\nimport CallDuration from \"./CallDuration.js\";\r\nconst Replay = () => {\r\n  const [user] = useAuthState(auth);\r\n  const [chats, setChats] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(\"\");\r\n  const [filteredData, setfilteredData] = useState([]);\r\n  const [userFCMTOken, setUserFCMToken] = useState(\"\");\r\n  const [userTitle, setUserTitle] = useState(\"\");\r\n  const [userEmailAudio, setUserEmailAudio] = useState(\"\");\r\n  const [userPhoneNumberAudio, setUserPhoneNumberAudio] = useState(\"\");\r\n  const [userImageAudio, setUserAudioImage] = useState(\"\");\r\n  const [open, setOpen] = useState(null);\r\n  const [videoCall, setVideoCall] = useState(false);\r\n  const [toggleVideo, settoggleVideo] = useState(false);\r\n  const [callType, setCallType] = useState(\"Audio\");\r\n  const [nameUser, setNameUser] = useState(\"\");\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userPhoneNumber, setUserPhoneNumber] = useState(\"\");\r\n  const [userImageChatSection, setUserImageChatSection] = useState(\"\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [isReceiving, setIsReceiving] = useState(false);\r\n  \r\n\r\n  // const onMessageListener = () => {\r\n  //   return new Promise((resolve) => {\r\n  //     onMessage(messaging, (payload) => {\r\n  //       console.log(\"payload\", payload);\r\n  //       setNameUser(payload.notification.title);\r\n  //       settoggleVideo(true);\r\n  //       setOpen(true);\r\n  //     });\r\n  //   });\r\n  // };\r\n\r\n  // useEffect(()=>{\r\n  //   onMessageListener();\r\n  // },[])\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const q = query(collection(db, \"chatroom/\" + user.uid + \"/chats\"));\r\n\r\n      const unsubscribe = onSnapshot(q, (QuerySnapshot) => {\r\n        const fetchedChats = [];\r\n        let counter = 0;\r\n        QuerySnapshot.forEach((doc) => {\r\n          fetchedChats.push({ ...doc.data(), id: doc.id });\r\n          // to select first chat by default\r\n          // if (counter == 0) {\r\n          //   setSelectedUser(doc.id);\r\n          // }\r\n          counter++;\r\n        });\r\n        // console.log(\"fetchedChats[0].name\",fetchedChats[0]);\r\n        // setUserFCMToken(fetchedChats[0].fcm_token)\r\n        // setUserTitle(fetchedChats[0].name)\r\n        // setUserPhoneNumberAudio(fetchedChats[0].phone)\r\n        // setUserEmailAudio(fetchedChats[0].email)\r\n        // setUserAudioImage(fetchedChats[0].photoUrl)\r\n        setChats(fetchedChats);\r\n      });\r\n      return () => unsubscribe;\r\n    }\r\n  }, [user]);\r\n\r\n  const onMessageListener = () => {\r\n    return new Promise((resolve) => {\r\n      onMessage(messaging, (payload) => {\r\n        console.log(\"payload\", payload);\r\n\r\n        // setNameUser(payload.notification.title);\r\n        // settoggleVideo(true);\r\n        // setOpen(true);\r\n      });\r\n    });\r\n  };\r\n  const location = useLocation();\r\n  const { state } = location;\r\n  // const [typeAudioVideo , settypeAudioVideo] = useState(\"Audio\")\r\n  useEffect(() => {\r\n    // console.log(\"state.typeAudioVideo\",state.typeAudioVideo);\r\n    if (state !== null) {\r\n      setNameUser(state.name);\r\n      setUserEmail(state.email);\r\n      setUserPhoneNumber(state.phoneNumber);\r\n      setUserImageChatSection(state.image);\r\n      settoggleVideo(state.toggleVideo);\r\n      setOpen(state.open);\r\n    }\r\n    setCallType(state == null ? \"Audio\" : state.typeAudioVideo);\r\n    // onMessageListener();\r\n  }, [location]);\r\n\r\n  // const [ids, setIds] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let callId = \"hO01sqCg552JEdhQMGae\";\r\n    const unsubscribe = onSnapshot(doc(db, \"call\", callId),async (doc1) => {\r\n      let callData = doc1.data();\r\n      if (callData) {\r\n        if (callData.isReceiving === true) {\r\n          setIsReceiving(true);\r\n        }\r\n        if (callData.isCalling === false) {\r\n          settoggleVideo(false);\r\n          setOpen(false);\r\n        }\r\n        if (callData.isCancelled) {\r\n          await setDoc(doc(db, \"call\", callId), { isCalling: false, isReceiving: false, isCancelled: false, callType: \"\" } ,{ merge: true }).then(async (docSnap) => { \r\n              console.log(\"Call cancelled.\")\r\n              window.location.reload();\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return () => unsubscribe;\r\n  }, []);\r\n\r\n  const refreshCounts = async (chatId) => {\r\n    const chatRef = doc(db, \"chatroom\", user.uid, \"chats\", chatId);\r\n    await setDoc(\r\n      chatRef,\r\n      { web_call_count: 0, web_message_count: 0 },\r\n      { merge: true }\r\n    ).then(async (docSnap) => {\r\n      console.log(\"counts reset\");\r\n    });\r\n  };\r\n  let changeChat = (evnt) => {\r\n    console.log(\"evnt.phoneevnt.phoneevnt.phone\", evnt.phone);\r\n    setUserFCMToken(evnt.fcm_token);\r\n    setUserTitle(evnt.name);\r\n    setUserPhoneNumberAudio(evnt.phone);\r\n    setUserAudioImage(evnt.photoUrl);\r\n    setUserEmailAudio(evnt.email);\r\n    setSelectedUser(evnt.id);\r\n    refreshCounts(evnt.id);\r\n  };\r\n  console.log(\"videoddsssss\", videoCall);\r\n  console.log(\"chatschatschatschatschats\", open);\r\n  return (\r\n    <div className=\"flex justify-between gap-3 pr-2 chat-cont\">\r\n      <div className=\"border border-[#E2E2E2] h-screen md:min-w-[280px] px-2 py-3\">\r\n        <div>\r\n          <div className=\"relative mt-2 flex items-center\">\r\n            <div className=\"absolute inset-y-0 -top-1.5 left-1.5 flex py-1.5 pr-1.5 text-gray\">\r\n              <Search />\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              name=\"search\"\r\n              id=\"search\"\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"block w-full rounded-md py-1.5 pl-10 border border-gray focus:outline-none\"\r\n            />\r\n          </div>\r\n          <div className=\"mt-[17px] [&>*:nth-child(1)]:mt-0\">\r\n            {chats\r\n              .filter((item) =>\r\n                item.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n              )\r\n              .map((chat, index) => (\r\n                <div\r\n                  key={chat.id}\r\n                  onClick={() => changeChat(chat)}\r\n                  className=\"chat-item\"\r\n                  id={chat.id}\r\n                >\r\n                  <div\r\n                    className={`relative rounded w-full h-[56px] pl-4 py-1 flex items-center gap-3 rounded-b-none mt-2 ${\r\n                      selectedUser == chat.id ? \"bg-gray50\" : \"\"\r\n                    }`}\r\n                  >\r\n                    <div className=\"h-[48px] w-[48px] rounded-full border border-lightblue overflow-hidden\">\r\n                      {chat.photoUrl !== \"\" ? (\r\n                        <img\r\n                          src={chat.photoUrl}\r\n                          alt=\"\"\r\n                          className=\"w-full h-full object-cover\"\r\n                        />\r\n                      ) : (\r\n                        <img\r\n                          src={userProfile}\r\n                          alt=\"\"\r\n                          className=\"w-full h-full object-cover\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"text-darkBlack\">\r\n                      <h2 className=\"font-[700] text-base leading-5\">\r\n                        {chat.name},{\" \"}\r\n                        <span className=\"font-[400] hidden md:block\">\r\n                          {chat.phone ? chat.phone : chat.email}\r\n                        </span>\r\n                      </h2>\r\n                      <p className=\"hidden md:block\">{chat.location}</p>\r\n                    </div>\r\n                    <div className=\"chat-notification-cont\">\r\n                      {chat.web_call_count > 0 && (\r\n                        <span className=\"alertCounts\">\r\n                          <span className=\"numbers\">{chat.web_call_count}</span>\r\n                          <img src={phoneIcon} alt=\"messages\" />\r\n                        </span>\r\n                      )}\r\n                      {chat.web_message_count > 0 && (\r\n                        <span className=\"alertCounts\">\r\n                          <span className=\"numbers\">\r\n                            {chat.web_message_count}\r\n                          </span>\r\n                          <img src={messageIcon} alt=\"messages\" />\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <span className=\"block h-[1px] borderGradient w-full mt-[4.5px]\"></span>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <Notification/> */}\r\n      {open && (\r\n        <Calllpopup\r\n          title={nameUser}\r\n          userImageChatSection={userImageChatSection}\r\n          toggleVideo={toggleVideo}\r\n          settoggleVideo={settoggleVideo}\r\n          open={open}\r\n          setOpen={setOpen}\r\n          userPhoneNumber={userPhoneNumber}\r\n          userEmail={userEmail}\r\n          setVideoCall={setVideoCall}\r\n          setIsReceiving={setIsReceiving}\r\n        />\r\n      )}\r\n      {videoCall && (\r\n        <>\r\n          <VideoCalling\r\n            userImageAudio={userImageAudio}\r\n            userEmailAudio={userEmailAudio}\r\n            userPhoneNumberAudio={userPhoneNumberAudio}\r\n            title={nameUser}\r\n            videoCall={videoCall}\r\n            setVideoCall={setVideoCall}\r\n            callType={callType}\r\n            isReceivings={isReceiving}\r\n          />\r\n          {/* <CallDuration isReceiving={isReceiving} /> */}\r\n        </>\r\n      )}\r\n      {selectedUser && (\r\n        <Chat\r\n          userImageAudio={userImageAudio}\r\n          userTitle={userTitle}\r\n          userPhoneNumberAudio={userPhoneNumberAudio}\r\n          userEmailAudio={userEmailAudio}\r\n          userFCMTOken={userFCMTOken}\r\n          selectedChat={{ selectedUser }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Replay;\r\n"],"names":["Message","_ref","message","_useAuthState","useAuthState","auth","user","_slicedToArray","_jsx","className","concat","sender","uid","children","SendMessage","selectedChat","spanRef","userFCMTOken","t","useTranslation","_useState","useState","_useState2","setMessage","_useState3","_useState4","height","setHeight","sendMessage","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","chatRef","newMessageCollection","wrap","_context","prev","next","preventDefault","trim","alert","abrupt","doc","db","selectedUser","updateDoc","app_message_count","increment","console","log","fetch","JSON","stringify","then","response","ok","Error","status","json","responseJson","catch","error","collection","addDoc","createdAt","serverTimestamp","current","scrollIntoView","behavior","stop","_x","apply","arguments","useEffect","length","_jsxs","onSubmit","htmlFor","hidden","id","name","type","placeholder","value","style","width","padding","borderRadius","onKeyDown","e","target","scrollHeight","keyCode","shiftKey","onChange","appRoot","document","getElementById","Modal","customStyles","overlay","zIndex","backgroundColor","content","maxWidth","border","background","display","alignItems","justifyContent","userTitle","userEmailAudio","userPhoneNumberAudio","userImageAudio","messages","setMessages","modalOpen","setModalOpen","_useState5","_useState6","callType","setCallType","useRef","_useState7","_useState8","videoCall","setVideoCall","q","query","unsubscribe","onSnapshot","QuerySnapshot","fetchedMessages","forEach","push","_objectSpread","data","sortedMessages","sort","a","b","closeModalOnOutsideClick","closest","addEventListener","removeEventListener","callAudioVideoApi","navigator","mediaDevices","getUserMedia","video","audio","app_call_count","method","headers","Accept","body","registrationToken","title","image","mobile_number","email","startCall","t0","t1","_ref3","_callee3","callRef","_context3","setDoc","isCalling","merge","_ref4","_callee2","docSnap","_context2","_x2","onClick","marginLeft","cursor","position","right","top","Callicon","flexDirection","_Fragment","map","ref","onLoad","isOpen","onRequestClose","textAlign","fontWeight","fontSize","marginTop","src","image_audio_call_start","image_video_call","VideoCalling","chats","setChats","setSelectedUser","setUserFCMToken","_useState9","_useState10","setUserTitle","_useState11","_useState12","setUserEmailAudio","_useState13","_useState14","setUserPhoneNumberAudio","_useState15","_useState16","setUserAudioImage","_useState17","_useState18","open","setOpen","_useState19","_useState20","_useState21","_useState22","toggleVideo","settoggleVideo","_useState23","_useState24","_useState25","_useState26","nameUser","setNameUser","_useState27","_useState28","userEmail","setUserEmail","_useState29","_useState30","userPhoneNumber","setUserPhoneNumber","_useState31","_useState32","userImageChatSection","setUserImageChatSection","_useState33","_useState34","searchTerm","setSearchTerm","_useState35","_useState36","isReceiving","setIsReceiving","fetchedChats","location","useLocation","state","phoneNumber","typeAudioVideo","callId","doc1","callData","isCancelled","window","reload","refreshCounts","_callee4","chatId","_context4","web_call_count","web_message_count","_x4","_x3","Search","filter","item","toLowerCase","includes","chat","index","evnt","phone","fcm_token","photoUrl","alt","userProfile","phoneIcon","messageIcon","Calllpopup","isReceivings","Chat"],"sourceRoot":""}