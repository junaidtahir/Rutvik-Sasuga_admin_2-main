{"version":3,"file":"static/js/549.bf3e749a.chunk.js","mappings":"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","sources":["components/pages/auth/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { auth, db } from \"../../../Firebase\";\nimport {query,get ,doc,getDoc, collection} from \"firebase/firestore\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\nimport { Routing } from \"../../shared/constants/routing\";\n\nconst Login = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [userData, setUserData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const heandelUserData = (e) => {\n    setErrormessage(\"\");\n    setUserData({\n      ...userData,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const [errormessage, setErrormessage] = useState(\"\");\n\n  \n    \n    \n\n\n  const login =  (e) => {\n    if (userData.email !== \"\" && userData.password !== \"\") {\n      signInWithEmailAndPassword(auth, userData.email, userData.password).then(async(useCredential) => {\n        \n          console.log(useCredential);\n          // code to check whether logged in user exist in the admin collection\n          const docRef = doc(db, \"admin\", useCredential.user.uid);\n          const docSnap = await getDoc(docRef);\n          if (docSnap.exists()) {\n            localStorage.setItem(\"usermail\", useCredential.user.email);\n            localStorage.setItem(\"accessToken\", useCredential.user.accessToken);\n            navigate(\"/dashboard\");\n          } else {\n            // docSnap.data() will be undefined in this case\n            alert(\"This is not a valid admin account.\");\n            localStorage.removeItem(\"accessToken\");\n            navigate(Routing.Login);\n          }\n\n\n          \n        })\n        .catch((error) => {\n          console.log(error);\n          setErrormessage(\"invalid-login-credentials\");\n        });\n    } else {\n      setErrormessage(\"Fill your Login details\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"h-[calc(100vh-62px)] ml-auto flex items-center justify-center\">\n        <div className=\"w-full\">\n          <h1 className=\"font-bold text-2xl leading-9 text-center mb-10\">\n            {t('Login.Login')}\n          </h1>\n          <div className=\"md:max-w-[654px] mx-auto w-full border border-bordercolor pb-5 rounded-lg p-10\">\n            <div className=\"flex flex-col gap-[24px]\">\n              <div className=\"flex items-center gap-x-7 flex-wrap\">\n                <label\n                  htmlFor=\"Username\"\n                  className=\"font-bold text-base leading-9 text-center\"\n                >\n                  {t('Login.Username')}\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"md:w-[428px] w-full pl-4 border border-bordercolor py-3 rounded-lg placeholder:text-Typography placeholder:text-sm text-sm text-Typography focus:outline-none \"\n                  placeholder=\"Eg miaranger@gmail.com\"\n                  id=\"Username\"\n                  name=\"email\"\n                  value={userData.email}\n                  onChange={heandelUserData}\n                />\n              </div>\n              <div className=\"flex items-center gap-x-7 flex-wrap\">\n                <label\n                  htmlFor=\"Password\"\n                  className=\"font-bold text-base leading-9 text-center \"\n                >\n                 {t('Login.Password')}\n                </label>\n                <input\n                  type=\"password\"\n                  className=\"md:w-[428px] w-full pl-4 border border-bordercolor py-3 rounded-lg placeholder:text-Typography placeholder:text-sm text-sm text-Typography focus:outline-none\"\n                  placeholder=\"Enter your password\"\n                  id=\"Password\"\n                  name=\"password\"\n                  value={userData.password}\n                  onChange={heandelUserData}\n                />\n              </div>\n              <button\n                className=\"md:max-w-[435px] h-[50px] text-center text-[#fff] bg-[#353A3F] rounded-md md:ml-[100px] ml-0\"\n                onClick={login}\n              >\n                {t('Login.Login')}\n              </button>\n              {errormessage && (\n                <p className=\"w-full text-center text-red\">{errormessage}</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["t","useTranslation","navigate","useNavigate","_useState","useState","email","password","_useState2","_slicedToArray","userData","setUserData","heandelUserData","e","setErrormessage","_objectSpread","_defineProperty","target","name","value","_useState3","_useState4","errormessage","_jsx","_Fragment","children","className","_jsxs","htmlFor","type","placeholder","id","onChange","onClick","signInWithEmailAndPassword","auth","then","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","useCredential","docRef","wrap","_context","prev","next","console","log","doc","db","user","uid","getDoc","sent","exists","localStorage","setItem","accessToken","alert","removeItem","Routing","Login","stop","_x","apply","arguments","catch","error"],"sourceRoot":""}