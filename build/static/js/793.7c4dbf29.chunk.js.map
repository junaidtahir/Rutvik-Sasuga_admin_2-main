{"version":3,"file":"static/js/793.7c4dbf29.chunk.js","mappings":"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","sources":["components/pages/pushNotification/sendNotificationPopup.js","components/pages/pushNotification/deleteNotificationPopup.js","components/pages/pushNotification/pushNotification.js"],"sourcesContent":["import { Dialog, Transition } from \"@headlessui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { Crossicon, Information } from \"../../../assets/icons\";\r\nimport Select from \"react-select\";\r\n// import SentMsgsPopup from \"./SentMsgsPopup\";\r\nimport axios from \"axios\";\r\nimport { auth, db } from \"../../../Firebase\";\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  serverTimestamp,\r\n  doc,\r\n  setDoc,\r\n} from \"firebase/firestore\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useTranslation } from \"react-i18next\";\r\nconst SendNotificationPopup = ({\r\n  open,\r\n  setOpen,\r\n  //   verify,\r\n  //   setVerify,\r\n  //   susupend,\r\n  //   setSusupend,\r\n  //   msgShow,\r\n  //   setMsgShow,\r\n  //   actionUserId,\r\n  //   setactionUserId,\r\n  //   selectedUser\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [sentMsg, setSentMsg] = useState(false);\r\n  const [user] = useAuthState(auth);\r\n  const [type, setType] = useState([]);\r\n  const Type = [\r\n    { value: \"PushNotification\", label: \"Push Notifications\" },\r\n    { value: \"EmailNotifications\", label: \"Email Notifications\" },\r\n  ];\r\n  const close = () => {\r\n    setOpen(false);\r\n    // setVerify(false);\r\n    // setMsgShow(false);\r\n    // setSusupend(false);\r\n  };\r\n\r\n  const handleSendNotification = async () => {\r\n    console.log(\"type: \" + type.value);\r\n    console.log(\"title: \" + title);\r\n    console.log(\"message: \" + message);\r\n    if (type.value === \"PushNotification\") {\r\n      const newNotificationCollection = collection(db, \"notifications\");\r\n      addDoc(newNotificationCollection, {\r\n        created_at: new Date(),\r\n        message: message,\r\n        type: \"pushNotification\",\r\n      }).then((response) => {\r\n        console.log(\"push added to database.\");\r\n      });\r\n      fetch(\r\n        \"https://us-central1-sasuga-d222e.cloudfunctions.net/sendMulPushNotifications\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            message: message,\r\n            title: title,\r\n          }),\r\n        }\r\n      )\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((responseJson) => {\r\n          console.log(responseJson);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    } else if (type.value === \"EmailNotifications\") {\r\n      const newEmailCollection = collection(db, \"mail\");\r\n      await addDoc(newEmailCollection, {\r\n        to: title,\r\n        message: {\r\n          html: message,\r\n          subject: \"Sasuga support\",\r\n        },\r\n      }).then((response) => {\r\n        const newNotificationCollection = collection(db, \"notifications\");\r\n        addDoc(newNotificationCollection, {\r\n          created_at: new Date(),\r\n          message: message,\r\n          type: \"emailNotification\",\r\n        });\r\n      });\r\n      alert(\"Email sent\");\r\n    }\r\n    setTitle(\"\");\r\n    setMessage(\"\");\r\n    close();\r\n    setSentMsg(true);\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n    // console.log(selectedUser)\r\n    // const usersRef = doc(db, \"users\", selectedUser.id );\r\n    //   await setDoc(usersRef, {isVerify: true} ,{ merge: true }).then(async (docSnap) => {\r\n    // });\r\n    close();\r\n  };\r\n\r\n  const handleSuspend = async () => {\r\n    // console.log(selectedUser)\r\n    // const usersRef = doc(db, \"users\", selectedUser.id );\r\n    //   await setDoc(usersRef, {isSuspended: true} ,{ merge: true }).then(async (docSnap) => {\r\n    // });\r\n    close();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Transition.Root show={open} as={Fragment}>\r\n        <Dialog as=\"div\" className=\"relative z-50\" onClose={close}>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <div className=\"fixed inset-0 bg-black bg-opacity-75 transition-opacity\" />\r\n          </Transition.Child>\r\n\r\n          <div className=\"fixed top-1/2 -translate-y-1/2 z-10 w-screen overflow-y-auto\">\r\n            <div className=\"flex min-h-full items-end justify-center  text-center sm:items-center sm:p-0\">\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter=\"ease-out duration-300\"\r\n                enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n                enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n                leave=\"ease-in duration-200\"\r\n                leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n                leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n              >\r\n                <Dialog.Panel className=\"relative  transform overflow-hidden rounded-[10px] bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-[654px]\">\r\n                  <div className=\"py-3 px-[32px] sm:block w-full flex items-center justify-between relative border-b border-[#D5DDEC]\">\r\n                    <h2 className=\"text-lg leading-7 text-[#252423] font-medium\">\r\n                      {t(\"SendMessage.SendMessage\")}\r\n                    </h2>\r\n                    <div\r\n                      className=\"absolute top-[51%] -translate-y-1/2 right-3 cursor-pointer\"\r\n                      onClick={close}\r\n                    >\r\n                      <Crossicon />\r\n                    </div>\r\n                  </div>\r\n                  {/* Send Message POPUP */}\r\n                  <div className=\"sm:flex sm:items-start\">\r\n                    <div className=\"mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\"></div>\r\n                    <div className=\"flex flex-col gap-6 mt-6 pb-10 flex-wrap px-3\">\r\n                      <div className=\"flex items-center gap-6 flex-wrap\">\r\n                        <p className=\"w-[88px] text-left text-base font-semibold leading-6 text-[#000]\">\r\n                          {t(\"Notification.Type\")}:\r\n                        </p>\r\n\r\n                        <Select\r\n                          value={type}\r\n                          onChange={(e) => {\r\n                            setType(e);\r\n                          }}\r\n                          options={Type}\r\n                          placeholder={\"Choose Type\"}\r\n                          className=\"md:w-[400px] w-full min-w-[180px] rounded-l-lg rounded-r-[0px] font-normal text-[14px] leading-[22px] notificationType mr-4\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"flex items-center gap-6 flex-wrap\">\r\n                        <p className=\"w-[88px] text-left text-base font-semibold leading-6 text-[#000]\">\r\n                          {type.value == \"EmailNotifications\"\r\n                            ? \"To\"\r\n                            : `${t(\"Notification.Title\")}:`}\r\n                        </p>\r\n\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"md:w-[400px] w-full pl-4 border border-[#D5DDEC] py-3 rounded-lg placeholder:text-Typography placeholder:text-sm text-sm text-Typography focus:outline-none text-typography font-medium\"\r\n                          placeholder={\r\n                            type.value == \"EmailNotifications\"\r\n                              ? \"Email\"\r\n                              : \"Title\"\r\n                          }\r\n                          value={title}\r\n                          onChange={(e) => setTitle(e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"flex items-center gap-6 flex-wrap\">\r\n                        <p className=\"w-[88px] text-left text-base font-semibold leading-6 text-[#000]\">\r\n                          {t(\"SendMessage.Message\")}:\r\n                        </p>\r\n\r\n                        <textarea\r\n                          className=\"md:w-[400px] w-full px-4 border border-[#D5DDEC] py-3 rounded-lg placeholder:text-Typography placeholder:text-sm text-sm text-Typography focus:outline-none text-typography font-medium h-[132px]\"\r\n                          placeholder={t(\"SendMessage.TypeMessageHere\")}\r\n                          value={message}\r\n                          onChange={(e) => setMessage(e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <button\r\n                        className=\"md:max-w-[435px] h-[50px] text-center text-[#fff] bg-[#353A3F] rounded-md md:ml-[110px] ml-0\"\r\n                        onClick={handleSendNotification}\r\n                      >\r\n                        {t(\"SendMessage.Send\")}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </Dialog.Panel>\r\n              </Transition.Child>\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n      </Transition.Root>\r\n\r\n      {/* <SentMsgsPopup SentMsg={sentMsg} setSentMsg={setSentMsg} /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SendNotificationPopup;\r\n","import React from \"react\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Fragment } from \"react\";\r\nimport { Crossicon, Information } from \"../../../assets/icons\";\r\n\r\nconst DeleteNotificationPopup = ({\r\n  selectedUser,\r\n  openDelete,\r\n  setOpenDelete,\r\n  deleteNotification,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const handleDeleteUser = () => {\r\n    setOpenDelete(!openDelete);\r\n  };\r\n  return (\r\n    <Transition.Root show={openDelete} as={Fragment}>\r\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={handleDeleteUser}>\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-75 transition-opacity\" />\r\n        </Transition.Child>\r\n\r\n        <div className=\"fixed top-1/2 -translate-y-1/2 z-10 w-screen overflow-y-auto\">\r\n          <div className=\"flex min-h-full items-end justify-center  text-center sm:items-center sm:p-0\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n              enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n              leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            >\r\n              <Dialog.Panel className=\"relative  transform overflow-hidden rounded-[10px] bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-[654px]\">\r\n                <div className=\"py-3 px-[32px] sm:block w-full flex items-center justify-between relative border-b border-[#D5DDEC]\">\r\n                  <h2 className=\"text-lg leading-7 text-[#252423] font-medium\">\r\n                    {t(\"SendMessage.DeleteUser\")}\r\n                  </h2>\r\n                  <div\r\n                    className=\"absolute top-[51%] -translate-y-1/2 right-3 cursor-pointer\"\r\n                    onClick={() => setOpenDelete(!openDelete)}\r\n                  >\r\n                    <Crossicon />\r\n                  </div>\r\n                </div>\r\n                {/* Delete User POPUP */}\r\n\r\n                <div className=\"sm:flex sm:items-start px-[32px] justify-center\">\r\n                  <div className=\"flex flex-col gap-4 py-[60px]\">\r\n                    <div className=\"w-[72px] h-[72px] rounded-full bg-[#F4F4F6] mx-auto flex items-center justify-center\">\r\n                      <Information />\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <p className=\"max-w-[270px] text-[#52678E] font-medium\">\r\n                        {t(\"SendMessage.YouAreAboutToDelete\")}{\" \"}\r\n                        <span className=\"text-[#000] font-bold block\">\r\n                          {selectedUser}\r\n                        </span>{\" \"}\r\n                        {t(\"SendMessage.ClickConfirmToDelete\")}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"flex items-center justify-center gap-4\">\r\n                      <button\r\n                        className=\"h-[38px] w-[87px] rounded-lg bg-[#16B188] text-white font-semibold\"\r\n                        onClick={() => deleteNotification()}\r\n                      >\r\n                        {t(\"SendMessage.Confirm\")}\r\n                      </button>\r\n                      <button\r\n                        className=\"h-[38px] w-[87px] rounded-lg bg-transparent hover:bg-[#16B188] hover:text-white text-[#000] border border-[#D5DDEC] font-bold hover:font-semibold\"\r\n                        onClick={() => setOpenDelete(!openDelete)}\r\n                      >\r\n                        {t(\"SendMessage.Cancel\")}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n};\r\n\r\nexport default DeleteNotificationPopup;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport ReactPaginate from \"react-paginate\";\r\n// Icons\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { Arrowleft } from \"../../../assets/icons\";\r\n\r\n// firebase\r\nimport { db, requestForToken, auth } from \"../../../Firebase\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport {\r\n  query,\r\n  collection,\r\n  getDocs,\r\n  doc,\r\n  firestore,\r\n  orderBy,\r\n  onSnapshot,\r\n  limit,\r\n  deleteDoc,\r\n} from \"firebase/firestore\";\r\nimport moment from \"moment\";\r\nimport SendNotificationPopup from \"./sendNotificationPopup\";\r\nimport DeleteNotificationPopup from \"./deleteNotificationPopup\";\r\n// import firebase from \"firebase/app\";\r\nconst PushNotification = () => {\r\n  const { t } = useTranslation();\r\n  // select\r\n  const Type = [\r\n    // { value: \"All\", label: \"All\" },\r\n    { value: \"PushNotification\", label: \"PushNotification\" },\r\n    { value: \"EmailNotification\", label: \"EmailNotification\" },\r\n  ];\r\n  const Male = [\r\n    { value: \"Male\", label: \"Male\" },\r\n    { value: \"Female\", label: \"Female\" },\r\n    { value: \"Transgender\", label: \"Transgender\" },\r\n  ];\r\n  const Suspended = [\r\n    { value: \"Suspended\", label: \"Suspended\" },\r\n    { value: \"Verified\", label: \"Verified\" },\r\n  ];\r\n  const [open, setOpen] = useState(false);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n  const [selectedUser, setselectedUser] = useState(\"\");\r\n\r\n  const [type, setType] = useState([]);\r\n  const [maleopt, setMaleopt] = useState([]);\r\n  const [notificationList, setNotificationList] = useState([]);\r\n  const [notificationType, setNotificationType] = useState([]);\r\n  const [suspended, setSuspended] = useState([]);\r\n  const [user] = useAuthState(auth);\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [selectedNotifications, setSelectedNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const querySnapshot = query(\r\n      collection(db, \"notifications\"),\r\n      orderBy(\"created_at\", \"desc\")\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(querySnapshot, (QuerySnapshot) => {\r\n      const data = [];\r\n      QuerySnapshot.forEach((doc) => {\r\n        const notification = doc.data();\r\n        notification.id = doc.id;\r\n        data.push(notification);\r\n      });\r\n      setSelectAll(false);\r\n      let filteredUsers =\r\n        notificationType.length > 0\r\n          ? data.filter((notification) =>\r\n              notificationType.some((filter) =>\r\n                matchesFilter(notification, filter)\r\n              )\r\n            )\r\n          : data;\r\n\r\n      setNotificationList(filteredUsers);\r\n    });\r\n    return () => unsubscribe;\r\n  }, [notificationType]);\r\n\r\n  function matchesFilter(notification, filter) {\r\n    return (\r\n      (filter.value === \"PushNotification\" &&\r\n        notification.type === \"pushNotification\") ||\r\n      (filter.value === \"EmailNotification\" &&\r\n        notification.type === \"emailNotification\")\r\n    );\r\n  }\r\n  const deleteNotification = async () => {\r\n    try {\r\n      const docRef = doc(db, \"notifications\", selectedUser);\r\n      await deleteDoc(docRef).then(()=> setOpenDelete(false));\r\n      // getNotificationListdata()\r\n    } catch (error) {}\r\n  };\r\n  const deleteSelectedNotifications = async () => {\r\n    try {\r\n      for (const notificationId of selectedNotifications) {\r\n        const docRef = doc(db, \"notifications\", notificationId);\r\n        await deleteDoc(docRef);\r\n      }\r\n      // getNotificationListdata(); // Refresh the notification list\r\n      setSelectedNotifications([]); // Clear selected notifications\r\n      // setSelectAll(!selectAll);\r\n    } catch (error) {\r\n      // Handle error\r\n    }\r\n  };\r\n\r\n  const toggleNotificationSelection = (notificationId) => {\r\n    if (isSelected(notificationId)) {\r\n      setSelectedNotifications((prevSelected) =>\r\n        prevSelected.filter((id) => id !== notificationId)\r\n      );\r\n    } else {\r\n      setSelectedNotifications((prevSelected) => [\r\n        ...prevSelected,\r\n        notificationId,\r\n      ]);\r\n    }\r\n  };\r\n  const isSelected = (notificationId) => {\r\n    return selectedNotifications.includes(notificationId);\r\n  };\r\n  const handleCheckAllClick = () => {\r\n    if (selectAll) {\r\n      setSelectedNotifications([]); // Uncheck all\r\n    } else {\r\n      // Check all notifications\r\n      const allNotificationIds = notificationList.map((item) => item.id);\r\n      setSelectedNotifications(allNotificationIds);\r\n    }\r\n    setSelectAll(!selectAll); // Toggle the state\r\n  };\r\n  const clearFilters = () => {\r\n    setNotificationType([]);\r\n  };\r\n  function Items({ currentItems }) {\r\n    return (\r\n      <>\r\n        <table\r\n          className=\"min-w-full table-fixed rounded-tl-[10px] border-2 border-[#E3E8F2] overflow-hidden mt-6\"\r\n          style={{ borderCollapse: \"inherit\" }}\r\n        >\r\n          <thead>\r\n            <tr className=\"divide-x divide-[#E3E8F2]\">\r\n              <th\r\n                scope=\"col\"\r\n                className=\"relative py-3 px-4 text-left text-sm text-[#52678E] font-medium bg-[#F4F4F6]\"\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selectAll}\r\n                  onChange={handleCheckAllClick}\r\n                  className=\"absolute left-4 top-1/2 -mt-2 h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600\"\r\n                />\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className=\"py-3 px-4 text-left text-sm text-[#52678E] font-medium bg-[#F4F4F6]\"\r\n              >\r\n                {t(\"Notification.Number\")}\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className=\"py-3 px-4 text-left text-sm text-[#52678E] font-medium bg-[#F4F4F6]\"\r\n              >\r\n                {t(\"Notification.NotificationMessagelete\")}\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className=\"py-3 px-4 text-left text-sm text-[#52678E] font-medium bg-[#F4F4F6]\"\r\n              >\r\n                {t(\"Notification.NotificationType\")}\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className=\"py-3 px-4 text-left text-sm text-[#52678E] font-medium bg-[#F4F4F6]\"\r\n              >\r\n                {t(\"Notification.CreateTime\")}\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className=\"py-3 px-4 text-left text-sm text-[#52678E] font-medium bg-[#F4F4F6]\"\r\n              >\r\n                {t(\"Notification.Action\")}\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody className=\"bg-white\">\r\n            {currentItems &&\r\n              currentItems.map((item, index) => {\r\n                const formattedDate = moment(item?.created_at?.toDate()).format(\r\n                  \"MMM Do YYYY, h:mm:ss a\"\r\n                );\r\n                return (\r\n                  <tr\r\n                    key={item.id}\r\n                    className={`bg-gray-50 divide-y divide-x divide-[#E3E8F2] `}\r\n                  >\r\n                    <td className=\"py-6 px-4 border-t border-bordercolor\">\r\n                      <input\r\n                        onChange={() => toggleNotificationSelection(item.id)}\r\n                        checked={isSelected(item.id)}\r\n                        type=\"checkbox\"\r\n                        className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600\"\r\n                      />\r\n                    </td>\r\n                    <td className=\"text-[#000000] py-6 px-4 font-medium\">\r\n                      {index + 1}\r\n                    </td>\r\n                    <td className=\"text-[#000000] py-6 px-4 font-medium\">\r\n                      {item.message}\r\n                    </td>\r\n                    <td className=\"text-[#000000] py-6 px-4 font-medium\">\r\n                      {item.type}\r\n                    </td>\r\n                    <td className=\"text-[#000000] py-6 px-4 font-medium\">\r\n                      {formattedDate}\r\n                    </td>\r\n                    <td className=\"text-[#000000] py-6 px-4 flex items-center gap-4\">\r\n                      <span className=\"h-[32px] w-[32px] bg-[#F4C4AF] rounded-full flex items-center justify-center\">\r\n                        <RiDeleteBin6Line\r\n                          onClick={() =>{\r\n                            setOpenDelete(true)\r\n                            setselectedUser(item.id)}\r\n                          }\r\n                          className=\"text-[#CE463F]\"\r\n                        />\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n  function PaginatedItems({ itemsPerPage }) {\r\n    // We start with an empty list of items.\r\n    const [currentItems, setCurrentItems] = useState(null);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    // Here we use item offsets; we could also use page offsets\r\n    // following the API or data you're working with.\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n\r\n    useEffect(() => {\r\n      // Fetch items from another resources.\r\n      const endOffset = itemOffset + itemsPerPage;\r\n      setCurrentItems(notificationList.slice(itemOffset, endOffset));\r\n\r\n      // console.log(`Showing ${Math.ceil(notificationList.length / itemsPerPage)} of ${notificationList.length}`);\r\n      setPageCount(Math.ceil(notificationList.length / itemsPerPage));\r\n    }, [itemOffset, itemsPerPage]);\r\n\r\n    // Invoke when user click to request another page.\r\n    const handlePageClick = (event) => {\r\n      const newOffset =\r\n        (event.selected * itemsPerPage) % notificationList.length;\r\n      console.log(\r\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n      );\r\n      setItemOffset(newOffset);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Items currentItems={currentItems} />\r\n        <div className=\"bottom-cont\">\r\n          {currentItems && (\r\n            <p className=\"tablePageStatus\">\r\n              {t(\"UserManagement.Showing\")} {currentItems.length} of{\" \"}\r\n              {notificationList.length}\r\n            </p>\r\n          )}\r\n          <ReactPaginate\r\n            nextLabel=\"&#8594;\"\r\n            onPageChange={handlePageClick}\r\n            pageRangeDisplayed={3}\r\n            marginPagesDisplayed={2}\r\n            pageCount={pageCount}\r\n            previousLabel=\"&#8592;\"\r\n            pageClassName=\"page-item\"\r\n            pageLinkClassName=\"page-link\"\r\n            previousClassName=\"page-item\"\r\n            previousLinkClassName=\"page-link\"\r\n            nextClassName=\"page-item\"\r\n            nextLinkClassName=\"page-link\"\r\n            breakLabel=\"...\"\r\n            breakClassName=\"page-item\"\r\n            breakLinkClassName=\"page-link\"\r\n            containerClassName=\"pagination\"\r\n            activeClassName=\"active\"\r\n            renderOnZeroPageCount={null}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"mt-10 px-[32px]\">\r\n        <div className=\"flex items-center justify-between flex-wrap gap-4\">\r\n          <button\r\n            className=\"bg-[#677DA4] text-white px-4 py-2.5 rounded-md\"\r\n            onClick={() => {\r\n              setOpen(true);\r\n            }}\r\n          >\r\n            {t(\"Notification.NewNotification\")}\r\n          </button>\r\n          <div className=\"flex items-center gap-4 divide-x-2 divide-[#E3E8F2]\">\r\n            {notificationType.length > 0 ? (\r\n              <div className=\"flex items-center\">\r\n                <h2 className=\"font-semibold text-xl text-[#000] leading-[28px]\">\r\n                  {notificationList.length} {t(\"UserManagement.Results\")}\r\n                </h2>\r\n                <h3 className=\"font-medium text-medium  text-[#000] relative pl-4\">\r\n                  {t(\"UserManagement.ClearFilters\")}{\" \"}\r\n                  <div className=\"absolute top-1/2 -translate-y-1/2 -right-6 w-[18px] h-[18px] rounded-full bg-[#F4F4F6] flex items-center justify-center\">\r\n                    <RxCross2\r\n                      onClick={clearFilters}\r\n                      className=\"text-sm text-[#52678E] font-medium cursor-pointer\"\r\n                    />\r\n                  </div>\r\n                </h3>\r\n              </div>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n          <div className=\"flex items-center flex-wrap filtter relative left-[-1px] gap-4\">\r\n            <h2 className=\"font-bold text-[18px] leading-[24px] text-[#000] mr-4\">\r\n              {t(\"Notification.Type\")}:\r\n            </h2>\r\n            <Select\r\n              value={notificationType}\r\n              onChange={setNotificationType}\r\n              options={Type}\r\n              placeholder={\"All\"}\r\n              isMulti\r\n              className=\"min-w-[180px] rounded-l-lg rounded-r-[0px] font-normal text-[14px] leading-[22px] notificationType mr-4\"\r\n            />\r\n\r\n            <div className=\"relative mr-12 flex items-center\">\r\n              <h2 className=\"font-bold text-[18px] leading-[24px] text-[#000] mr-4\">\r\n                {t(\"Notification.Search\")}:\r\n              </h2>\r\n              <Select\r\n                // defaultValue={selectedOption}\r\n                value={suspended}\r\n                onChange={setSuspended}\r\n                options={Suspended}\r\n                isMulti\r\n                placeholder={t(\"Notification.UserEmailOrUsername\")}\r\n                className=\"min-w-[180px] min-h-[46px] lastinput font-normal text-[14px] leading-[22px] suspended\"\r\n              />\r\n              <div className=\"flex items-center flex-wrap absolute top-1/2 -translate-y-1/2 -right-[3.03rem]\">\r\n                <button className=\"min-h-[46px] px-4 py-2 box-border bg-gray rounded-r-lg text-white\">\r\n                  <Arrowleft />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={() => deleteSelectedNotifications()}\r\n              className={`min-h-[46px] px-5 py-2 box-border rounded-md text-white ${\r\n                selectedNotifications.length > 0 ? \"bg-[#677DA4]\" : \"bg-gray\"\r\n              }`}\r\n            >\r\n              {t(\"Notification.Delete\")}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"w-full overflow-x-auto\"\r\n          style={{\r\n            borderBottom: \"2px solid #D5DDEC\",\r\n            borderRadius: \"0 0 10px 10px\",\r\n          }}\r\n        >\r\n          <PaginatedItems itemsPerPage={4} />\r\n        </div>\r\n        <SendNotificationPopup open={open} setOpen={setOpen} />\r\n        <DeleteNotificationPopup\r\n          openDelete={openDelete}\r\n          selectedUser={selectedUser}\r\n          deleteNotification={deleteNotification}\r\n          setOpenDelete={setOpenDelete}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PushNotification;\r\n"],"names":["_ref","open","setOpen","t","useTranslation","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","message","setMessage","_useState5","_useState6","setSentMsg","_useAuthState","useAuthState","auth","_useState7","_useState8","type","setType","close","handleSendNotification","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newNotificationCollection","newEmailCollection","wrap","_context","prev","next","console","log","value","collection","db","addDoc","created_at","Date","then","response","fetch","method","headers","Accept","body","JSON","stringify","ok","Error","concat","status","json","responseJson","catch","error","to","html","subject","alert","stop","apply","arguments","_jsx","_Fragment","children","Transition","Root","show","as","Fragment","_jsxs","Dialog","className","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Panel","onClick","Crossicon","Select","onChange","e","options","label","placeholder","target","selectedUser","openDelete","setOpenDelete","deleteNotification","Information","setselectedUser","_useState9","_useState10","_useState11","_useState12","notificationList","setNotificationList","_useState13","_useState14","notificationType","setNotificationType","_useState15","_useState16","suspended","setSuspended","_useState17","_useState18","selectAll","setSelectAll","_useState19","_useState20","selectedNotifications","setSelectedNotifications","useEffect","querySnapshot","query","orderBy","unsubscribe","onSnapshot","QuerySnapshot","data","forEach","doc","notification","id","push","filteredUsers","length","filter","some","matchesFilter","docRef","deleteDoc","t0","deleteSelectedNotifications","_callee2","_iterator","_step","notificationId","_context2","_createForOfIteratorHelper","s","n","done","f","finish","t1","toggleNotificationSelection","isSelected","prevSelected","_toConsumableArray","includes","handleCheckAllClick","allNotificationIds","map","item","Items","_ref3","currentItems","style","borderCollapse","scope","checked","index","_item$created_at","formattedDate","moment","toDate","format","RiDeleteBin6Line","PaginatedItems","_ref4","itemsPerPage","_useState21","_useState22","setCurrentItems","_useState23","_useState24","pageCount","setPageCount","_useState25","_useState26","itemOffset","setItemOffset","endOffset","slice","Math","ceil","ReactPaginate","nextLabel","onPageChange","event","newOffset","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","renderOnZeroPageCount","RxCross2","isMulti","Arrowleft","borderBottom","borderRadius","SendNotificationPopup","DeleteNotificationPopup"],"sourceRoot":""}